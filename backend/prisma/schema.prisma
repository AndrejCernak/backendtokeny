// ===== Datasource & Generator =====
datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

// ===== User & Legacy Credit (seconds) =====
model User {
  id                   String         @id
  createdAt            DateTime       @default(now())

  tokenBalance         TokenBalance?
  transactions         Transaction[]
  callSessionsAsCaller CallSession[]  @relation("CallerSessions")
  callSessionsAsCallee CallSession[]  @relation("CalleeSessions")

  // spätné pole k FridayToken.owner
  fridayTokens         FridayToken[]  @relation("UserFridayTokens")

  // spätné pole k FridayListing.seller
  tokenListings        FridayListing[] @relation("SellerListings")
  pushTokens           PushToken[]

}

/**
 * Bežný kredit (mimo piatku) v sekundách (zostáva kvôli starej logike)
 */
model TokenBalance {
  userId           String   @id
  secondsRemaining Int      @default(0)
  updatedAt        DateTime @updatedAt

  user             User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

/**
 * Finančno-kreditné pohyby.
 * secondsDelta používame pre „bežný kredit“ (mimo piatku).
 * Piatkové nákupy/obchody evidujeme cez Friday* typy.
 */
model Transaction {
  id           String           @id @default(cuid())
  userId       String
  type         TransactionType
  amountEur    Decimal          @db.Decimal(10, 2) @default(0)
  secondsDelta Int              @default(0)
  note         String?
  createdAt    DateTime         @default(now())

  user         User             @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@index([userId, createdAt])
  @@index([type, createdAt])
}

enum TransactionType {
  // legacy / mimo piatku
  purchase
  call_debit
  adjustment
  refund

  // piatkové tokeny
  friday_purchase
  friday_trade_buy
  friday_trade_sell
}

/**
 * Log hovorov (spoločný pre oba režimy).
 * secondsBilled/priceEur môže byť pri piatku len informatívny.
 */
model CallSession {
  id            String      @id @default(cuid())
  callerId      String?
  calleeId      String?
  startedAt     DateTime    @default(now())
  endedAt       DateTime?
  status        CallStatus  @default(active)

  secondsBilled Int         @default(0)
  priceEur      Decimal     @db.Decimal(10, 2) @default(0)

  caller        User?       @relation("CallerSessions", fields: [callerId], references: [id], onDelete: SetNull)
  callee        User?       @relation("CalleeSessions", fields: [calleeId], references: [id], onDelete: SetNull)

  @@index([callerId, startedAt])
  @@index([calleeId, startedAt])
  @@index([status, startedAt])
}

enum CallStatus {
  active
  ended
  aborted
  no_tokens
}

// ===== Friday Tokens (Alternatíva A) =====

/**
 * Jeden piatkový token = 60 min. Prenositeľný (burza).
 */
model FridayToken {
  id               String             @id @default(cuid())
  ownerId          String?
  issuedYear       Int
  minutesRemaining Int                @default(60)
  status           FridayTokenStatus  @default(active)
  createdAt        DateTime           @default(now())
  originalPriceEur Decimal            @db.Decimal(10, 2)

  // väzba na User (pomenovaná relácia + spätné pole v User.fridayTokens)
  owner            User?              @relation("UserFridayTokens", fields: [ownerId], references: [id], onDelete: SetNull)

  // spätné pole k FridayListing.token (1:1, tokenId je unique)
  listing          FridayListing?     @relation("TokenListing")

  @@index([ownerId])
  @@index([issuedYear])
  @@index([status])
}

enum FridayTokenStatus {
  active
  spent
  listed
}

/**
 * Evidencia emisie v danom roku (treasury).
 */
model FridaySupply {
  year              Int      @id
  priceEur          Decimal  @db.Decimal(10,2)
  treasuryAvailable Int      @default(0)
  totalMinted       Int      @default(0)
  totalSold         Int      @default(0)
  createdAt         DateTime @default(now())
  updatedAt         DateTime @updatedAt

  @@map("friday_supply")
}

/**
 * Sekundárny trh – listing jedného konkrétneho tokenu.
 */
model FridayListing {
  id        String        @id @default(cuid())
  tokenId   String        @unique
  sellerId  String
  priceEur  Decimal       @db.Decimal(10, 2)
  status    ListingStatus @default(open)
  createdAt DateTime      @default(now())
  closedAt  DateTime?

  // relácia na token + spätné pole vo FridayToken.listing
  token     FridayToken   @relation("TokenListing", fields: [tokenId], references: [id], onDelete: Cascade)

  // relácia na seller + spätné pole v User.tokenListings
  seller    User          @relation("SellerListings", fields: [sellerId], references: [id], onDelete: Cascade)

  @@index([status, createdAt])
}

enum ListingStatus {
  open
  sold
  cancelled
}

model PushToken {
  id        String   @id @default(cuid())
  userId    String
  token     String   @unique           // FCM token (jedinečný)
  platform  String?                     // napr. "ios", "android", "web"
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  user      User     @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@index([userId])
}